{"ast":null,"code":"var _jsxFileName = \"/Users/imadjaha/MyProjects/Portfolio React/portfolio/src/components/Quotes.js\";\n// import React, { Component } from \"react\";\n\n// class Quotes extends Component {\n//   constructor() {\n//     super();\n//     this.state = { quote: {} , quotes: []};\n\n//     this.fetchQuotes = this.fetchQuotes.bind(this);\n//   }\n\n//   componentDidMount() {\n//     fetch(\"http://localhost:3004/quotes/random\")\n//       .then((response) => response.json())\n//       .then((json) => this.setState({ quote: json }));\n//   }\n\n//   fetchQuotes = ()=>{  // For autoBinding \n//     fetch(\"http://localhost:3004/quotes/ten\")\n//     .then((response) => response.json())\n//     .then((json) => this.setState({ quotes: json }));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h2>Today's Quote </h2>\n//         <p>{this.state.quote.title}</p>\n//         <hr />\n//         <h3>Do You Want More Quotes ?</h3>\n//         <button className=\"btn\" onClick={this.fetchQuotes}>Quotes</button>\n//         {\n//           this.state.quotes.map(quotes => {\n//             return <p>{quotes.title}</p>\n//           })\n//         }\n//       </div>\n//     );\n//   }\n// }\n\n// export default Quotes;\n\nimport React, { Component } from \"react\";\nimport quotesData from \"../in.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Quotes extends Component {\n  constructor() {\n    super();\n    this.fetchQuotes = () => {\n      // Fetch all quotes\n      this.setState({\n        quotes: quotesData\n      });\n    };\n    this.state = {\n      quote: {},\n      quotes: []\n    };\n    this.fetchQuotes = this.fetchQuotes.bind(this);\n  }\n  componentDidMount() {\n    // Display a random quote initially\n    const randomIndex = Math.floor(Math.random() * quotesData.length);\n    this.setState({\n      quote: quotesData[randomIndex]\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Today's Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.quote.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Do You Want More Quotes?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: this.fetchQuotes,\n        children: \"Quotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), this.state.quotes.map(quote => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: quote.title\n        }, quote.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Quotes;","map":{"version":3,"names":["React","Component","quotesData","jsxDEV","_jsxDEV","Quotes","constructor","fetchQuotes","setState","quotes","state","quote","bind","componentDidMount","randomIndex","Math","floor","random","length","render","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","onClick","map","id"],"sources":["/Users/imadjaha/MyProjects/Portfolio React/portfolio/src/components/Quotes.js"],"sourcesContent":["// import React, { Component } from \"react\";\n\n// class Quotes extends Component {\n//   constructor() {\n//     super();\n//     this.state = { quote: {} , quotes: []};\n\n//     this.fetchQuotes = this.fetchQuotes.bind(this);\n//   }\n\n//   componentDidMount() {\n//     fetch(\"http://localhost:3004/quotes/random\")\n//       .then((response) => response.json())\n//       .then((json) => this.setState({ quote: json }));\n//   }\n\n//   fetchQuotes = ()=>{  // For autoBinding \n//     fetch(\"http://localhost:3004/quotes/ten\")\n//     .then((response) => response.json())\n//     .then((json) => this.setState({ quotes: json }));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h2>Today's Quote </h2>\n//         <p>{this.state.quote.title}</p>\n//         <hr />\n//         <h3>Do You Want More Quotes ?</h3>\n//         <button className=\"btn\" onClick={this.fetchQuotes}>Quotes</button>\n//         {\n//           this.state.quotes.map(quotes => {\n//             return <p>{quotes.title}</p>\n//           })\n//         }\n//       </div>\n//     );\n//   }\n// }\n\n// export default Quotes;\n\n\nimport React, { Component } from \"react\";\nimport quotesData from \"../in.json\";\n\nclass Quotes extends Component {\n  constructor() {\n    super();\n    this.state = { quote: {}, quotes: [] };\n    this.fetchQuotes = this.fetchQuotes.bind(this);\n  }\n\n  componentDidMount() {\n    // Display a random quote initially\n    const randomIndex = Math.floor(Math.random() * quotesData.length);\n    this.setState({ quote: quotesData[randomIndex] });\n  }\n\n  fetchQuotes = () => {\n    // Fetch all quotes\n    this.setState({ quotes: quotesData });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Today's Quote</h2>\n        <p>{this.state.quote.title}</p>\n        <hr />\n        <h3>Do You Want More Quotes?</h3>\n        <button className=\"btn\" onClick={this.fetchQuotes}>\n          Quotes\n        </button>\n        {this.state.quotes.map((quote) => {\n          return <p key={quote.id}>{quote.title}</p>;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Quotes;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAC7BK,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAWVC,WAAW,GAAG,MAAM;MAClB;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEC,MAAM,EAAEP;MAAW,CAAC,CAAC;IACvC,CAAC;IAbC,IAAI,CAACQ,KAAK,GAAG;MAAEC,KAAK,EAAE,CAAC,CAAC;MAAEF,MAAM,EAAE;IAAG,CAAC;IACtC,IAAI,CAACF,WAAW,GAAG,IAAI,CAACA,WAAW,CAACK,IAAI,CAAC,IAAI,CAAC;EAChD;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGf,UAAU,CAACgB,MAAM,CAAC;IACjE,IAAI,CAACV,QAAQ,CAAC;MAAEG,KAAK,EAAET,UAAU,CAACY,WAAW;IAAE,CAAC,CAAC;EACnD;EAOAK,MAAMA,CAAA,EAAG;IACP,oBACEf,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBpB,OAAA;QAAAgB,QAAA,EAAI,IAAI,CAACV,KAAK,CAACC,KAAK,CAACc;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BpB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpB,OAAA;QAAAgB,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCpB,OAAA;QAAQsB,SAAS,EAAC,KAAK;QAACC,OAAO,EAAE,IAAI,CAACpB,WAAY;QAAAa,QAAA,EAAC;MAEnD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACd,KAAK,CAACD,MAAM,CAACmB,GAAG,CAAEjB,KAAK,IAAK;QAChC,oBAAOP,OAAA;UAAAgB,QAAA,EAAmBT,KAAK,CAACc;QAAK,GAAtBd,KAAK,CAACkB,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAAC;MAC5C,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAenB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}