{"ast":null,"code":"var _jsxFileName = \"/Users/imadjaha/MyProjects/Portfolio React/portfolio/src/components/Quotes.js\";\nimport React, { Component } from \"react\";\nimport quotesData from \"./quotes.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Quotes extends Component {\n  constructor() {\n    super();\n    this.fetchQuotes = () => {\n      // Fetch all quotes\n      this.setState({\n        quotes: quotesData,\n        showQuotes: true\n      });\n    };\n    this.toggleQuotes = () => {\n      // Toggle between showing and hiding quotes\n      this.setState(prevState => ({\n        showQuotes: !prevState.showQuotes\n      }));\n    };\n    this.state = {\n      quote: {},\n      quotes: [],\n      showQuotes: true\n    };\n    this.fetchQuotes = this.fetchQuotes.bind(this);\n    this.toggleQuotes = this.toggleQuotes.bind(this);\n  }\n  componentDidMount() {\n    // Display a random quote initially\n    const randomIndex = Math.floor(Math.random() * quotesData.length);\n    this.setState({\n      quote: quotesData[randomIndex]\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Today's Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.quote.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), this.state.quotes.length > 0 && this.state.showQuotes ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Do You Want More Quotes?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.toggleQuotes,\n          children: \"Hide Quotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), this.state.quotes.map(quote => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: quote.title\n          }, quote.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Quotes Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.toggleQuotes,\n          children: \"Show Quotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Quotes;","map":{"version":3,"names":["React","Component","quotesData","jsxDEV","_jsxDEV","Quotes","constructor","fetchQuotes","setState","quotes","showQuotes","toggleQuotes","prevState","state","quote","bind","componentDidMount","randomIndex","Math","floor","random","length","render","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","onClick","map","id"],"sources":["/Users/imadjaha/MyProjects/Portfolio React/portfolio/src/components/Quotes.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport quotesData from \"./quotes.json\";\n\nclass Quotes extends Component {\n  constructor() {\n    super();\n    this.state = { quote: {}, quotes: [], showQuotes: true };\n    this.fetchQuotes = this.fetchQuotes.bind(this);\n    this.toggleQuotes = this.toggleQuotes.bind(this);\n  }\n\n  componentDidMount() {\n    // Display a random quote initially\n    const randomIndex = Math.floor(Math.random() * quotesData.length);\n    this.setState({ quote: quotesData[randomIndex] });\n  }\n\n  fetchQuotes = () => {\n    // Fetch all quotes\n    this.setState({ quotes: quotesData, showQuotes: true });\n  };\n\n  toggleQuotes = () => {\n    // Toggle between showing and hiding quotes\n    this.setState((prevState) => ({\n      showQuotes: !prevState.showQuotes,\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Today's Quote</h2>\n        <p>{this.state.quote.title}</p>\n        <hr />\n        {this.state.quotes.length > 0 && this.state.showQuotes ? (\n          <div>\n            <h3>Do You Want More Quotes?</h3>\n            <button className=\"btn\" onClick={this.toggleQuotes}>\n              Hide Quotes\n            </button>\n            {this.state.quotes.map((quote) => {\n              return <p key={quote.id}>{quote.title}</p>;\n            })}\n          </div>\n        ) : (\n          <div>\n            <h3>No Quotes Available</h3>\n            <button className=\"btn\" onClick={this.toggleQuotes}>\n              Show Quotes\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Quotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}